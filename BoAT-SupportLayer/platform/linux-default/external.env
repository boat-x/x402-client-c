# Compiler

ifeq ($(TEST_ON_COMPUTER), yes)
    CC = gcc
    AR = ar
else
    CC = $(MIN_CC)
    AR = $(MIN_AR)
endif

# Commands
BOAT_RM := rm -rf
BOAT_MKDIR := mkdir
BOAT_FIND := find
BOAT_COPY := cp

#LD_LIBRARY_PATH := $(LD_LIBRARY_PATH):$(CURDIR)/../../../build/usr/lib

# External include path and libraries

EXTERNAL_INC := -I$(BOAT_BASE_DIR)/BoAT-SupportLayer/third-party -I$(BOAT_BASE_DIR)/BoAT-SupportLayer/third-party/cJSON -I$(BOAT_BASE_DIR)/../../fiboframework/framework/c/inc -I$(BOAT_BASE_DIR)/../../fiboframework/interfaces/modemServices -I$(BOAT_BASE_DIR)/../../fiboframework/interfaces -I$(BOAT_BASE_DIR)/../../fiboframework/interfaces/atServices

ifeq ($(TEST_ON_COMPUTER), yes)
    EXTERNAL_LIBS := -lcurl
else
    EXTERNAL_LIBS := -lcurl -lpaho-mqtt3c -lfibofwk -lmodemservice -lpthread -lrt -ldl -lm -lz -liot_sdk -liot_platform -lmbedtls -lmbedx509 -lmbedcrypto -lapservice -latClient
endif

ifeq ($(TEST_ON_COMPUTER), yes)
    EXTERNAL_CFLAGS := -DHAVE_ARPA_INET_H
else
    EXTERNAL_CFLAGS := -DUSE_FIBOCOM_L718 -DHAVE_ARPA_INET_H
endif

EXTERNAL_LFLAGS := -L$(BOAT_BASE_DIR)/../../../fibo_libs

export CC
export AR
export BOAT_RM
export BOAT_MKDIR
export BOAT_FIND
export BOAT_COPY
export LD_LIBRARY_PATH
export EXTERNAL_INC
export EXTERNAL_LIBS
export EXTERNAL_CFLAGS
export EXTERNAL_LFLAGS
